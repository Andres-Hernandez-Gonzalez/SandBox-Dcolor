@model DColor.DB.Empleado

@{
    ViewBag.Title = "Delete";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div class="card-header py-3 bg-five">
        <h6 class="m-0 font-weight-bold text-white">Eliminar un Empleado</h6>
    </div>
    <div class="card-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="row">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.idEmpleado)
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.idRol, "Rol Empleado", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("idRol", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.idRol, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.cedula, "Cedula", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @required = "required", @maxlength = "9" } })
                    @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", onkeypress = "return SoloLetras(event)", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.apellido, "Apellidos", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control", onkeypress = "return SoloLetras(event)", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.telefono, "Telefono", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @required = "required", maxlength = "8" } })
                    @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.correo, "Correo", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "email" } })
                    @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.contraseña, "Contraseña", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.contraseña, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "password", @maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.contraseña, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.idEstado, "Estado Empleado", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("idEstado", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.idEstado, "", new { @class = "text-danger" })
                </div>
            </div>

                <div class="col-12">
                    <div class="form-group">
                        <button type="submit" class="btn btn-danger" id="boton" formnovalidate>
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-check-fill" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M15.854 5.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L12.5 7.793l2.646-2.647a.5.5 0 0 1 .708 0z" />
                                <path d="M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
                            </svg>Eliminar Empleado
                        </button>
                    </div>
                </div>
        </div>
        }
        <!-- DataTales Example -->
    </div>
</div>
<script src="~/Scripts/Funciones/Funciones.js"></script>