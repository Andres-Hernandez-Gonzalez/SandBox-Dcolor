@model DColor.DB.Empleado

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="row">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.idRol, "Rol Empleado", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("idRol", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.idRol, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cedula, "Cedula", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @required = "required", @maxlength = "9" } })
                        @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", onkeypress = "return SoloLetras(event)", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.apellido, "Apellidos", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control", onkeypress = "return SoloLetras(event)", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.telefono, "Telefono", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @required = "required", maxlength = "8" } })
                        @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.correo, "Correo", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.contraseña, "Contraseña", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.contraseña, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "password", @maxlength = "20" } })
                        @Html.ValidationMessageFor(model => model.contraseña, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.idEstado, "Estado Empleado", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("idEstado", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.idEstado, "", new { @class = "text-danger" })
                    </div>
                </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.intentos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.intentos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.intentos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ultimoIntento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ultimoIntento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ultimoIntento, "", new { @class = "text-danger" })
            </div>
        }
        <div class="col-12" style=" margin: 0 180px; top: -53px;">
            <form action="@Url.Action("Index","Empleados")">
                <button type="submit" class="btn btn-danger">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left-circle-fill" viewBox="0 0 16 16">
                        <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z" />
                    </svg> Cancelar
                </button>
            </form>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
