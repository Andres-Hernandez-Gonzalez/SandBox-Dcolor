@model DColor.DB.Empleado

@{
    ViewBag.Title = "Edit";
}
<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div class="card-header py-3 bg-fourth">
        <h6 class="m-0 font-weight-bold text-dark">Modificar un Empleado</h6>
    </div>
    <div class="card-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="row">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.idEmpleado)
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.idRol, "Rol Empleado", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("idRol", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.idRol, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cedula, "Cedula", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @required = "required", @maxlength = "9" } })
                        @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", onkeypress = "return SoloLetras(event)", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.apellido, "Apellidos", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control", onkeypress = "return SoloLetras(event)", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.telefono, "Telefono", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @required = "required", maxlength = "8" } })
                        @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.correo, "Correo", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                    </div>
                </div>
      
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.idEstado, "Estado Empleado", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("idEstado", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.idEstado, "", new { @class = "text-danger" })
                    </div>
                </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.intentos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.intentos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.intentos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ultimoIntento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ultimoIntento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ultimoIntento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
