@model DColor.DB.Cliente

@{
    ViewBag.Title = "RegistrarClientes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div class="card-header py-3 bg-third">
        <h6 class="m-0 font-weight-bold text-dark">Registrar un nuevo Cliente</h6>
    </div>
    <div class="card-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="row">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.idEstadoCliente, "Estado Cliente", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("idEstadoCliente", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.idEstadoCliente, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cedula, "Cedula", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control", @required = "required", onkeypress = "return isNumber(event)", @maxlength = "9" } })
                        @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", onkeypress = "return SoloLetras(event)", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.apellidos, "Apellidos", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control", onkeypress = "return SoloLetras(event)", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.direccion, "Direccion", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.telefono, "Telefono", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @required = "required", maxlength = "8" } })
                        @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.correo, "Correo", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-12">
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary" id="boton" formnovalidate>
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-check-fill" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M15.854 5.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L12.5 7.793l2.646-2.647a.5.5 0 0 1 .708 0z" />
                                <path d="M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
                            </svg>Registrar Cliente
                        </button>
                    </div>
                </div>

            </div>
        }

        <div class="col-12" style=" margin: 0 160px; top: -53px;">
            <form action="@Url.Action("ConsultarClientes","Clientes")">
                <button type="submit" class="btn btn-danger">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left-circle-fill" viewBox="0 0 16 16">
                        <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z" />
                    </svg> Cancelar
                </button>
            </form>
        </div>

        <!-- DataTales Example -->
    </div>
</div>
<script src="~/Scripts/Funciones/Funciones.js"></script>
